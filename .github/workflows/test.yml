name: CI

on:
  pull_request:
    branches:
      - main

jobs:
  snapshot:
    name: snapshot
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v3
        with:
          go-version: "1.17.5"

      - uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --snapshot --rm-dist

      - name: Capture x86_64 (64-bit) Linux binary
        uses: actions/upload-artifact@v3
        with:
          name: auto-doc-linux-amd64
          path: dist/auto-doc_linux_amd64/auto-doc

      - name: Capture i386 (32-bit) Linux binary
        uses: actions/upload-artifact@v3
        with:
          name: auto-doc-linux-i386
          path: dist/auto-doc_linux_386/auto-doc

      - name: Capture arm64 (64-bit) Linux binary
        uses: actions/upload-artifact@v3
        with:
          name: auto-doc-linux-arm64
          path: dist/auto-doc_linux_arm64/auto-doc

      - name: Capture armv6 (32-bit) Linux binary
        uses: actions/upload-artifact@v3
        with:
          name: auto-doc-linux-armv6
          path: dist/auto-doc_linux_arm_6/auto-doc

      - name: Capture armv7 (32-bit) Linux binary
        uses: actions/upload-artifact@v3
        with:
          name: auto-doc-linux-armv7
          path: dist/auto-doc_linux_arm_7/auto-doc

      - name: Capture x86_64 (64-bit) Windows binary
        uses: actions/upload-artifact@v3
        with:
          name: auto-doc-windows-amd64
          path: dist/auto-doc_windows_amd64/auto-doc.exe

      - name: Capture i386 (32-bit) Windows binary
        uses: actions/upload-artifact@v3
        with:
          name: auto-doc-windows-i386
          path: dist/auto-doc_windows_386/auto-doc.exe

      - name: Capture arm64 (64-bit) Windows binary
        uses: actions/upload-artifact@v3
        with:
          name: auto-doc-windows-arm64
          path: dist/auto-doc_windows_arm64/auto-doc.exe

      - name: Capture armv7 (32-bit) Windows binary
        uses: actions/upload-artifact@v3
        with:
          name: auto-doc-windows-armv7
          path: dist/auto-doc_windows_arm_7/auto-doc.exe

      - name: Capture x86_64 (64-bit) MacOS binary
        uses: actions/upload-artifact@v3
        with:
          name: auto-doc-macos-amd64
          path: dist/auto-doc_darwin_amd64/auto-doc

      - name: Capture arm64 (64-bit) MacOS binary
        uses: actions/upload-artifact@v3
        with:
          name: auto-doc-macos-arm64
          path: dist/auto-doc_darwin_arm64/auto-doc

  test:
    name: Test auto-doc
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.0
        with:
          fetch-depth: 0  # otherwise, you will failed to push refs to dest repo
          persist-credentials: false  # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token

      - name: Setup go
        uses: actions/setup-go@v3
        with:
          go-version: '1.17.5'

      - uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      
      - name: Test action
        uses: ./

      - name: Run auto-doc using the test directory
        run:
          make test

      - name: Run auto-doc using the top level directory
        run:
          make run
          
      - name: Format markdown
        uses: tj-actions/remark@v3

      - name: Verify Changed files
        uses: tj-actions/verify-changed-files@v9
        id: verify-changed-files
        with:
          files: |
            README.md

      - name: Commit README changes
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add ${{ steps.verify-changed-files.outputs.changed_files }}
          git commit -m "Updated README."

      - name: Push README changes
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.PAT_TOKEN }}
          branch: ${{ github.head_ref }}
